from aiogram import Router, F
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from states.states import BotStates

router = Router()

@router.message(Command("start"))
async def cmd_start(message: Message):
    await message.answer(
        "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–æ–º.",
        reply_markup=get_main_keyboard()
    )

@router.message(Command("menu"))
async def cmd_menu(message: Message):
    await message.answer(
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=get_main_keyboard()
    )

def get_main_keyboard():
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üîç –ü–æ–∏—Å–∫ –≥—Ä—É–ø–ø"), KeyboardButton(text="üë• –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")],
            [KeyboardButton(text="üìã –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≥—Ä—É–ø–ø—ã"), KeyboardButton(text="‚ùå –£–¥–∞–ª–∏—Ç—å –≥—Ä—É–ø–ø—É")],
            [KeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –≥—Ä—É–ø–ø—É –≤—Ä—É—á–Ω—É—é"), KeyboardButton(text="üì® –†–∞—Å—Å—ã–ª–∫–∞ –∏–Ω–≤–∞–π—Ç–æ–≤")],
            [KeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")]
        ],
        resize_keyboard=True,
        persistent=True
    )
    return keyboard

@router.message(F.text == "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")
async def text_settings(message: Message, state: FSMContext):
    await message.answer(
        f"–¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:\n- –õ–∏–º–∏—Ç –ø–∞—Ä—Å–∏–Ω–≥–∞: 500 –≥—Ä—É–ø–ø –≤ –¥–µ–Ω—å\n- –õ–∏–º–∏—Ç –∏–Ω–≤–∞–π—Ç–æ–≤: 50 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –¥–µ–Ω—å\n\n"
        f"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª (–ø–∞—Ä—Å–∏–Ω–≥, –∏–Ω–≤–∞–π—Ç—ã):"
    )
    await state.set_state(BotStates.waiting_for_settings)

@router.message(BotStates.waiting_for_settings)
async def settings_handler(message: Message, state: FSMContext):
    try:
        parse_limit, invite_limit = map(int, message.text.split())
        await message.answer(f"–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã:\n- –õ–∏–º–∏—Ç –ø–∞—Ä—Å–∏–Ω–≥–∞: {parse_limit} –≥—Ä—É–ø–ø –≤ –¥–µ–Ω—å\n- –õ–∏–º–∏—Ç –∏–Ω–≤–∞–π—Ç–æ–≤: {invite_limit} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –¥–µ–Ω—å")
    except ValueError:
        await message.answer("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö. –í–≤–µ–¥–∏—Ç–µ –¥–≤–∞ —á–∏—Å–ª–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª.")
    await state.clear()
